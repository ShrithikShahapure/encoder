Resources:
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Role used for Fargate ECR access
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: cbt-task-execution-role
  TaskRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Role used for reading and writing to S3
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: cbt-task-role
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Role used for Fargate ECR access
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: cbt-stepfunctions-role
  EventBridgeRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - events.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AdministratorAccess
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.19.0.0/16
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      MapPublicIpOnLaunch: true
      CidrBlock: 10.19.5.0/24
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC1
  SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Fargate Tasks
      GroupName: FargateVideoProcessor
      VpcId: !Ref VPC1
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
  InternetRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1
  CloudTrail1:
    DependsOn:
      - CloudTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties: 
      EventSelectors: 
        - ReadWriteType: WriteOnly
          DataResources:
            - Type: AWS::S3::Object
              Values:
                - 'arn:aws:s3:::cbtvideo-source/'
      IsLogging: true
      S3BucketName: cbtvideo-cloudtrail
      TrailName: trevorcbt
  CloudTrailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cbtvideo-cloudtrail
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cbtvideo-source
  DestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cbtvideo-destination
  CloudTrailBucketPolicy:
    DependsOn:
      - CloudTrailBucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: cbtvideo-cloudtrail
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Action: s3:PutObject
            Principal:
              Service: cloudtrail.amazonaws.com
            Resource: 'arn:aws:s3:::cbtvideo-cloudtrail/AWSLogs/665453315198/*'
            Condition:
              StringEquals:
                's3:x-amz-acl': bucket-owner-full-control
          - Sid: AWSCloudTrailAclCheck
            Action: 's3:GetBucketAcl'
            Effect: Allow
            Principal:
              Service: 'cloudtrail.amazonaws.com'
            Resource: 'arn:aws:s3:::cbtvideo-cloudtrail'
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties: 
      ContainerDefinitions: 
        -   Image: 665453315198.dkr.ecr.us-west-2.amazonaws.com/cbtvideoprocessor
            Name: videoprocessor
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-group: cbtvideoprocessor
                awslogs-region: us-west-2
                awslogs-stream-prefix: videoprocessor
                awslogs-create-group: 'true'
      Cpu: '4096'
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      Family: serverless-video-processor
      Memory: '8192'
      NetworkMode: awsvpc
      RequiresCompatibilities: 
        - FARGATE
      TaskRoleArn: !GetAtt TaskRole.Arn
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: cbtvideoprocessor
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties: 
      RoleArn: !GetAtt StateMachineRole.Arn
      DefinitionString: !Sub
        - |
          {
            "StartAt": "ConvertVideo",
            "States": {
              "ConvertVideo": {
                "Type": "Task",
                "Resource": "arn:aws:states:::ecs:runTask.sync",
                "Parameters": {
                  "LaunchType":"FARGATE",
                  "Cluster": "${Cluster}",
                  "TaskDefinition": "${TaskDefinition}",
                  "Overrides": {
                    "ContainerOverrides": [
                      {
                        "Name": "videoprocessor",
                        "Environment": [
                          {
                            "Name": "S3Key",
                            "Value.$": "$.detail.requestParameters.key"
                          },
                          {
                            "Name": "S3Bucket",
                            "Value.$": "$.detail.requestParameters.bucketName"
                          }
                        ]
                      }
                    ]
                  },
                  "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                      "AssignPublicIp": "ENABLED",
                      "SecurityGroups": [
                        "${SecurityGroup}"
                      ],
                      "Subnets": [
                        "${Subnet}"
                      ]
                    }
                  }
                },
                "End": true
              }
            }
          }
        - Cluster: !Ref ECSCluster
          TaskDefinition: !Select [ 0, !Split [ ':', !Select [1, !Split [ '/', !Ref TaskDefinition ] ] ] ]
          SecurityGroup: !Ref SecGroup
          Subnet: !Ref Subnet1
      StateMachineName: cbt-serverless-video-processor
  EventBridgeRule:
    DependsOn:
      - EventBridgeRole
    Type: AWS::Events::Rule
    Properties: 
      Description: Triggers an AWS Fargate task when a new video is uploaded.
      EventPattern:
        source:
          - 'aws.s3'
        detail-type: 
          - 'AWS API Call via CloudTrail'
        detail:
          eventSource:
            - 's3.amazonaws.com'
          eventName:
            - PutObject
            - CompleteMultipartUpload
          requestParameters:
            bucketName:
              - 'cbtvideo-source'
      Name: serverless-video-processor
      RoleArn: !GetAtt EventBridgeRole.Arn
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          RoleArn: !GetAtt EventBridgeRole.Arn
          Id: invoke-video-processor-sfn